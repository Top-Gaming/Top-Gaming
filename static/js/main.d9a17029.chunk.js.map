{"version":3,"sources":["logo.svg","Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx","navigation.module.css"],"names":["buttonWidth","window","innerWidth","Button","text","href","this","buttons","startingWidth","total","index","btn","push","button","NavigationButton","props","style","updateButtonWidth","setState","width","state","goToLink","location","assign","addEventListener","removeEventListener","onClick","className","styles","navigationButton","Component","NavigationBar","content","length","convertToHTML","navigationBar","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8LAAe,G,MAAA,IAA0B,kC,kECGrCA,EAAuBC,OAAOC,WAAa,EAAI,EAEtCC,EAAb,WAGI,WAAYC,EAAeC,GAAgB,yBAF3CD,UAE0C,OAD1CC,UAC0C,EACtCC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EALpB,sDAQI,SAAqBE,EAAoBC,GACrC,IAD6D,EACzDC,EAAwB,GACxBC,EAAQ,EAFiD,cAG3CH,GAH2C,IAG7D,2BAA2B,CAAC,IAAjBI,EAAgB,QACvBF,EAAMG,KAAK,cAAC,EAAD,CAAkBC,OAAQF,EAAKH,cAAeA,GAAoBE,IAC7EA,KALyD,8BAO7D,OAAOD,MAff,KA2BMK,E,kDAEF,WAAYC,GAAc,IAAD,8BACrB,cAAMA,IAFVC,WACyB,IAYzBC,kBAAoB,WAChB,EAAKC,SAAS,CACVC,MAAOnB,IAEX,EAAKgB,MAAQ,CACT,MAAU,EAAKI,MAAMD,QAjBJ,EAiCzBE,SAAW,WACPpB,OAAOqB,SAASC,OAAO,EAAKR,MAAMF,OAAOR,OA/BzC,EAAKe,MAAQ,CACTD,MAAQ,EAAKJ,MAAMP,eAGvB,EAAKQ,MAAQ,CACT,MAAU,EAAKD,MAAMP,cAAgB,MARpB,E,qDAqBzB,WACIP,OAAOuB,iBAAiB,SAAUlB,KAAKW,qB,kCAG3C,WACIhB,OAAOwB,oBAAoB,SAAUnB,KAAKW,qB,oBAG9C,WACI,OAAO,qBAAKS,QAASpB,KAAKe,SAAUL,MAAOV,KAAKU,MAAOW,UAAWC,IAAOC,iBAAlE,SAAqFvB,KAAKS,MAAMF,OAAOT,W,GAhCvF0B,aA8CVC,E,kDAEjB,WAAYhB,GAAc,IAAD,8BACrB,cAAMA,IAFViB,aACyB,IAMzBf,kBAAoB,WAChBjB,EAAcC,OAAOC,WAAa,EAAKa,MAAMiB,QAAQC,OAAS,GAJ9D,EAAKD,QAAU7B,EAAO+B,cAAc,EAAKnB,MAAMiB,QAAS/B,OAAOC,WAAa,EAAKa,MAAMiB,QAAQC,OAAS,GAHnF,E,qDAUzB,WACIhC,OAAOuB,iBAAiB,SAAUlB,KAAKW,qB,kCAG3C,WACIhB,OAAOwB,oBAAoB,SAAUnB,KAAKW,qB,oBAG9C,WACI,OAAO,qBAAKU,UAAWC,IAAOO,cAAvB,SAAuC7B,KAAK0B,c,GArBhBF,aCzEvCvB,EAAU,CACV,IAAIJ,EAAO,OAAQ,KACnB,IAAIA,EAAO,UAAW,WACtB,IAAIA,EAAO,YAAa,cACxB,IAAIA,EAAO,eAAgB,QAC3B,IAAIA,EAAO,UAAW,aAyBXiC,MAtBf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,cAAC,EAAD,CAAeK,QAASzB,IACxB,yBAAQoB,UAAU,aAAlB,UACE,qBAAKU,IAAKC,EAAMX,UAAU,WAAWY,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEZ,UAAU,WACVtB,KAAK,sBACLmC,OAAO,SACPC,IAAI,sBAJN,gCCROC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,iBAAmB,wC","file":"static/js/main.d9a17029.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styles from './navigation.module.css';\r\n\r\nlet buttonWidth : number = window.innerWidth / 5 - 2;\r\n\r\nexport class Button {\r\n    text : string;\r\n    href : string;\r\n    constructor(text : string, href : string) {\r\n        this.text = text;\r\n        this.href = href;\r\n    }\r\n\r\n    static convertToHTML(buttons : Button[], startingWidth : number) {\r\n        let total : JSX.Element[] = [];\r\n        let index = 0;\r\n        for (const btn of buttons) {\r\n            total.push(<NavigationButton button={btn} startingWidth={startingWidth} key={index} />);\r\n            index++;\r\n        }\r\n        return total;\r\n    }\r\n}\r\n\r\ninterface NavigationButtonProps {\r\n    button : Button;\r\n    startingWidth : number\r\n}\r\ninterface NavigationButtonState {\r\n    width : number;\r\n}\r\n\r\nclass NavigationButton extends Component<NavigationButtonProps, NavigationButtonState> {\r\n    style : Object;\r\n    constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            width : this.props.startingWidth\r\n        }\r\n\r\n        this.style = {\r\n            \"width\" : this.props.startingWidth + \"px\"\r\n        }\r\n    }\r\n\r\n    updateButtonWidth = () => {\r\n        this.setState({\r\n            width: buttonWidth\r\n        });\r\n        this.style = {\r\n            \"width\" : this.state.width\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateButtonWidth)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateButtonWidth)\r\n    }\r\n\r\n    render() {\r\n        return <div onClick={this.goToLink} style={this.style} className={styles.navigationButton}>{this.props.button.text}</div>;\r\n    }\r\n\r\n    goToLink = () => {\r\n        window.location.assign(this.props.button.href);\r\n    }\r\n}\r\n\r\ninterface NavigationBarProps {\r\n    content : Array<Button>;\r\n}\r\ninterface NavigationBarState {}\r\n\r\n\r\nexport default class NavigationBar extends Component<NavigationBarProps, NavigationBarState> {\r\n    content : Array<JSX.Element>\r\n    constructor(props : any) {\r\n        super(props)\r\n\r\n        this.content = Button.convertToHTML(this.props.content, window.innerWidth / this.props.content.length - 2)\r\n    }\r\n\r\n    updateButtonWidth = () => {\r\n        buttonWidth = window.innerWidth / this.props.content.length - 2\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateButtonWidth)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateButtonWidth)\r\n    }\r\n\r\n    render() {\r\n        return <div className={styles.navigationBar}>{this.content}</div>\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavigationBar, {Button} from './Navigation';\n\nlet buttons = [\n    new Button(\"Home\", \"/\"),\n    new Button(\"Sign Up\", \"/signup\"),\n    new Button(\"Minecraft\", \"/minecraft\"),\n    new Button(\"Call of Duty\", \"/cod\"),\n    new Button(\"Pokemon\", \"/pokemon\")\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar content={buttons} />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationBar\":\"navigation_navigationBar__2KlCt\",\"navigationButton\":\"navigation_navigationButton__2mPrY\"};"],"sourceRoot":""}